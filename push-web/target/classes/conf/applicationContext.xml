<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:util="http://www.springframework.org/schema/util"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:cache="http://www.springframework.org/schema/cache"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
  http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
  http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
  http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd">


<mvc:annotation-driven />

  <context:property-placeholder location="classpath:/config.properties" />

  <import resource="classpath:/mongoDataSource.xml" />

  <context:component-scan base-package="com.cyou" />

  <aop:aspectj-autoproxy proxy-target-class="true" />

  <mvc:resources location="/resource/" mapping="/resource/**" />

  <mvc:default-servlet-handler />

	
  <mvc:view-controller path="/web" view-name="login" />

  <!-- annotation默认的方法映射适配器 -->
  <bean id="defaultAnnotationHandlerMapping" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
    <property name="order" value="1" />
  </bean>

  <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
    <property name="defaultErrorView" value="error" />
  </bean>

  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="maxUploadSize" value="512000" />
  </bean>

  <!-- 多线程 -->
	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="20" />
		<property name="maxPoolSize" value="20" />
		<property name="WaitForTasksToCompleteOnShutdown" value="true" />
	</bean>
	
		<bean id="redisTemplate" name="redisTemplate" class="com.cyou.video.mobile.server.cms.service.common.RedisTemplate">
		<constructor-arg index="0" name="config" ref="jedisPoolConfig" />
		<constructor-arg index="1" name="hostname" value="${redis.host}" />
		<constructor-arg index="2" name="port" value="${redis.port}" />
		<constructor-arg index="3" name="password" value="${redis.password}" />
	</bean>

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.pool.maxTotal}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="minIdle" value="${redis.pool.minIdle}" />
		<property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
		<property name="testWhileIdle" value="${redis.pool.testWhileIdle}" />
		<property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}" />
		<property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />
		<property name="blockWhenExhausted" value="${redis.pool.blockWhenExhausted}" />
	</bean>
	
</beans>